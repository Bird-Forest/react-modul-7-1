{"version":3,"file":"static/js/96.5be62ea3.chunk.js","mappings":"2JAMA,IAJqB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACtB,OAAOC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,QAAOC,SAAEH,GAC/B,C,8JCaMI,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,6BAA2B,IAE3C,SAASC,IAAkB,IAADC,EAAAC,EAC/BC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,GAAeC,EAAAA,EAAAA,QAA2B,QAArBT,EAAe,QAAfC,EAACG,EAASM,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,YAAI,IAAAX,EAAAA,EAAI,KAC9CY,GAAcC,EAAAA,EAAAA,KAAY,SAAAH,GAAK,OAAIA,EAAME,YAAYE,eAAe,IACpEC,GAAYF,EAAAA,EAAAA,KAAY,SAAAH,GAAK,OAAIA,EAAME,YAAYG,SAAS,IAC5DC,GAAQH,EAAAA,EAAAA,KAAY,SAAAH,GAAK,OAAIA,EAAME,YAAYI,KAAK,IACpDC,GAAWC,EAAAA,EAAAA,MASjB,OARAC,EAAAA,EAAAA,YAAU,WACHjB,GACLe,GAASG,EAAAA,EAAAA,GAAmBlB,IACzBmB,SACAC,MAAK,WACJhB,QAAQC,IAAI,QACd,GACJ,GAAG,CAACL,EAAQe,KAEVM,EAAAA,EAAAA,MAAA,OAAA3B,SAAA,EACEF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAIjB,EAAakB,QAAQ9B,SAAC,aAChCF,EAAAA,EAAAA,KAAA,UAAQiC,QAAS,kBAAMV,GAASW,EAAAA,EAAAA,GAAS,CAAEC,MAAO,MAAOC,KAAM,QAAS,EAAClC,SAAC,+BAGzEmB,IAAarB,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,IACpBf,IAAStB,EAAAA,EAAAA,KAACsC,EAAAA,EAAY,CAACvC,QAASuB,IAChB,OAAhBJ,IACCW,EAAAA,EAAAA,MAAA,OAAA3B,SAAA,EACE2B,EAAAA,EAAAA,MAAA,MAAA3B,SAAA,CAAI,eAAagB,EAAYiB,UAC7BN,EAAAA,EAAAA,MAAA,KAAA3B,SAAA,CAAG,cAAYgB,EAAYkB,YAI/BpC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACuC,EAAAA,GAAO,CAACR,GAAG,WAAW9B,UAAU,cAAaC,SAAC,gBAKjDF,EAAAA,EAAAA,KAACwC,EAAAA,SAAQ,CAACC,UAAUzC,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,IAAInC,UAC7BF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAAAxC,UACLF,EAAAA,EAAAA,KAAC2C,EAAAA,GAAK,CAACC,KAAK,WAAWC,SAAS7C,EAAAA,EAAAA,KAACG,EAAW,YAKtD,C","sources":["components/Error.jsx","pages/PostDetailPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { Suspense, lazy, useEffect, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\n// import { findPostById } from 'servise/api';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/Error';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPosts } from 'redux/postDetailsRedux';\nimport { requestPostDatails } from 'redux/thunkAPI';\n\nconst CommentPage = lazy(() => import('pages/CommentPage'));\n\nexport default function PostDetailPage() {\n  const { postId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const postDetails = useSelector(state => state.postDetails.postDetailsData);\n  const isLoading = useSelector(state => state.postDetails.isLoading);\n  const error = useSelector(state => state.postDetails.error);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!postId) return;\n    dispatch(requestPostDatails(postId))\n      .unwrap()\n      .then(() => {\n        console.log('Hello');\n      });\n  }, [postId, dispatch]);\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go Back</Link>\n      <button onClick={() => dispatch(addPosts({ title: '123', body: '123' }))}>\n        Click to add post to STATE\n      </button>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {postDetails !== null && (\n        <div>\n          <h2>Post Title: {postDetails.title}</h2>\n          <p>Post Body: {postDetails.body}</p>\n        </div>\n      )}\n\n      <div>\n        <NavLink to=\"comments\" className=\"header-link\">\n          Comments\n        </NavLink>\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<CommentPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["_ref","message","_jsx","className","children","CommentPage","lazy","PostDetailPage","_location$state$from","_location$state","postId","useParams","location","useLocation","console","log","backLinkHref","useRef","state","from","postDetails","useSelector","postDetailsData","isLoading","error","dispatch","useDispatch","useEffect","requestPostDatails","unwrap","then","_jsxs","Link","to","current","onClick","addPosts","title","body","Loader","ErrorMessage","NavLink","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}