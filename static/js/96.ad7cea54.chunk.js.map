{"version":3,"file":"static/js/96.ad7cea54.chunk.js","mappings":"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","sources":["components/Error.jsx","pages/PostDetailPage.jsx","servise/api.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { Suspense, lazy, useEffect, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nimport { findPostById } from 'servise/api';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/Error';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addPosts,\n  setError,\n  setisLoading,\n  setPostDetails,\n} from 'redux/postDetailsRedux';\n\nconst CommentPage = lazy(() => import('pages/CommentPage'));\nexport default function PostDetailPage() {\n  const { postId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const postDetails = useSelector(state => state.postDetails.postDetailsData);\n  const isLoading = useSelector(state => state.postDetails.isLoading);\n  const error = useSelector(state => state.postDetails.error);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!postId) return;\n    const fetchAllPosts = async () => {\n      try {\n        dispatch(setisLoading(true));\n        const postData = await findPostById(postId);\n        dispatch(setPostDetails(postData));\n      } catch (error) {\n        dispatch(setError(error.message));\n      } finally {\n        dispatch(setisLoading(false));\n      }\n    };\n    fetchAllPosts();\n  }, [postId, dispatch]);\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go Back</Link>\n      <button onClick={() => dispatch(addPosts({ title: '123', body: '123' }))}>\n        Click to add post to STATE\n      </button>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {postDetails !== null && (\n        <div>\n          <h2>Post Title: {postDetails.title}</h2>\n          <p>Post Body: {postDetails.body}</p>\n        </div>\n      )}\n\n      <div>\n        <NavLink to=\"comments\" className=\"header-link\">\n          Comments\n        </NavLink>\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<CommentPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport const fetchPosts = async () => {\n  const { data } = await axios.get(\n    'https://jsonplaceholder.typicode.com/posts/'\n  );\n  //   throw new Error('Ooohs! Some error...');\n  return data;\n};\n\nexport const findPostById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}`\n  );\n\n  return data;\n};\n\nexport const findPostCommentsById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n  );\n  return data;\n};\n"],"names":["_ref","message","_jsx","className","children","CommentPage","lazy","PostDetailPage","_location$state$from","_location$state","postId","useParams","location","useLocation","console","log","backLinkHref","useRef","state","from","postDetails","useSelector","postDetailsData","isLoading","error","dispatch","useDispatch","useEffect","fetchAllPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","postData","wrap","_context","prev","next","setisLoading","findPostById","sent","setPostDetails","t0","setError","finish","stop","apply","arguments","_jsxs","Link","to","current","onClick","addPosts","title","body","Loader","ErrorMessage","NavLink","Suspense","fallback","Routes","Route","path","element","fetchPosts","_yield$axios$get","data","axios","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","concat","_x","findPostCommentsById","_ref3","_callee3","_yield$axios$get3","_context3","_x2"],"sourceRoot":""}